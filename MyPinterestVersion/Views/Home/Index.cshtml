@using Microsoft.AspNet.Identity
@{
    ViewBag.Title = "Home Page";
}
@using PagedList.Mvc;
@if (!Request.IsAuthenticated)
{
    <div class="jumbotron">
        <h1>Bookmarks Paradise</h1>
        <p class="lead">Bookmarks Paradise is the place where you can share and follow your favorite topics as fast as you would say hooray!</p>
        <p>@Html.ActionLink("To unlock the full features of this platform plase create an account", "Register", "Account", routeValues: null, htmlAttributes: new { id = "registerLink" })</p>
    </div>
}


@*<div class="row">
        <div class="col-md-4">
            <h2>Here books</h2>
            <p>
                ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
                enables a clean separation of concerns and gives you full control over markup
                for enjoyable, agile development.
            </p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301865">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Here books</h2>
            <p>NuGet is a free Visual Studio extension that makes it easy to add, remove, and update libraries and tools in Visual Studio projects.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301866">Learn more &raquo;</a></p>
        </div>
        <div class="col-md-4">
            <h2>Here books</h2>
            <p>You can easily find a web hosting company that offers the right mix of features and price for your applications.</p>
            <p><a class="btn btn-default" href="https://go.microsoft.com/fwlink/?LinkId=301867">Learn more &raquo;</a></p>
        </div>
    </div>*@
    <div style="padding-top:15px">
        <p style="display:inline-block" class="alert-danger">Sort By: </p>
        @Html.ActionLink("Date", "Index", new { searchString = Request["SearchString"], by = Request["by"], sortOrder = ViewBag.DateSortParm })
        @if (ViewBag.DateSortParm != null)
        {
            if (Convert.ToBoolean(ViewData["date_desc"]))
            {
                <i class="glyphicon glyphicon-arrow-up"></i>
            }
            else
            {
                <i class="glyphicon glyphicon-arrow-down"></i>
            }
        }
        @Html.ActionLink("Rating", "Index", new { searchString = Request["SearchString"], by = Request["by"], sortOrder = ViewBag.RatingSortParm })
        @if (ViewBag.DateSortParm != null)
        {
            if (Convert.ToBoolean(ViewData["rating_desc"]))
            {
                <i class="glyphicon glyphicon-arrow-up"></i>
            }
            else
            {
                <i class="glyphicon glyphicon-arrow-down"></i>
            }
        }

        </div>
@model PagedList.IPagedList<MyPinterestVersion.Models.Bookmark>
@for (int i = 0; i < Model.Count(); i += 3)
{
    <ul class="row list-inline">
        @{
            int j = 0;
            for (; j <= 2 && i + j < Model.Count(); j++)
            {
                <li class="col-md-4 list-inline-item">
                    @Html.Partial("BookmarkPartial", Model[i + j])
                </li>
            }
        }
    </ul>
}
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index",
    new { page }))
